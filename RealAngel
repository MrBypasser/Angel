local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")
local userInputService = game:GetService("UserInputService")

-- Update hotbar tool names
local playerGui = player:WaitForChild("PlayerGui")
local hotbar = playerGui:FindFirstChild("Hotbar")
local backpack = hotbar and hotbar:FindFirstChild("Backpack")
local hotbarFrame = backpack and backpack:FindFirstChild("Hotbar")

if hotbarFrame then
    local slot1 = hotbarFrame:FindFirstChild("1")
    if slot1 then
        local baseButton = slot1:FindFirstChild("Base")
        if baseButton then
            local toolNameGui = baseButton:FindFirstChild("ToolName")
            if toolNameGui then
                toolNameGui.Text = "Angel's Punch"
            end
        end
    end
    local slot2 = hotbarFrame:FindFirstChild("2")
    if slot2 then
        local baseButton = slot2:FindFirstChild("Base")
        if baseButton then
            local toolNameGui = baseButton:FindFirstChild("ToolName")
            if toolNameGui then
                toolNameGui.Text = "Angel's Downfall"
            end
        end
    end
    local slot3 = hotbarFrame:FindFirstChild("3")
    if slot3 then
        local baseButton = slot3:FindFirstChild("Base")
        if baseButton then
            local toolNameGui = baseButton:FindFirstChild("ToolName")
            if toolNameGui then
                toolNameGui.Text = "Angel's Grasp"
            end
        end
    end
    local slot4 = hotbarFrame:FindFirstChild("4")
    if slot4 then
        local baseButton = slot4:FindFirstChild("Base")
        if baseButton then
            local toolNameGui = baseButton:FindFirstChild("ToolName")
            if toolNameGui then
                toolNameGui.Text = "Angel's Rush"
            end
        end
    end
end

-- Angel's Punch Logic
local function angelsPunch()
    local currentPosition = rootPart.Position
    local teleportPosition = currentPosition + Vector3.new(0, 50, 0)
    rootPart.CFrame = CFrame.new(teleportPosition)

    rootPart.Anchored = true
    local glow = Instance.new("ParticleEmitter")
    glow.Texture = "rbxassetid://YOUR_PARTICLE_TEXTURE"
    glow.Lifetime = NumberRange.new(0.5)
    glow.Speed = NumberRange.new(0)
    glow.Rate = 50
    glow.Size = NumberSequence.new(1)
    glow.Color = ColorSequence.new(Color3.fromRGB(255, 255, 255))
    glow.Parent = rootPart
    glow.Enabled = true

    task.delay(2, function()
        rootPart.Anchored = false
        glow.Enabled = false
        glow:Destroy()
    end)
end

-- Angel's Downfall Logic (Ascends 200 studs in 2.5 seconds and teleports after 2.8 seconds)
local function angelsDownfall()
    task.wait(0.4)
    local currentPosition = rootPart.Position
    local currentCFrame = rootPart.CFrame

    local risePosition = currentPosition + Vector3.new(0, 200, 0)
    local riseTweenInfo = TweenInfo.new(2.5, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local riseTweenGoal = {CFrame = CFrame.new(risePosition) * CFrame.Angles(0, 0, 0)}
    local riseTween = game:GetService("TweenService"):Create(rootPart, riseTweenInfo, riseTweenGoal)
    riseTween:Play()

    task.delay(2.8, function()
        local ray = workspace:Raycast(rootPart.Position, Vector3.new(0, -500, 0), {ignoreWater = true})
        if ray then
            rootPart.CFrame = CFrame.new(ray.Position + Vector3.new(0, 2, 0))
        else
            rootPart.CFrame = CFrame.new(currentPosition + Vector3.new(0, -200, 0))
        end
    end)
end

-- Angel's Grasp Logic (Teleport to nearest player and face them)
local function angelsGrasp()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character then
            local otherCharacter = otherPlayer.Character
            local otherRootPart = otherCharacter:FindFirstChild("HumanoidRootPart")

            if otherRootPart then
                local distance = (rootPart.Position - otherRootPart.Position).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    closestPlayer = otherPlayer
                end
            end
        end
    end

    if closestPlayer then
        local targetCharacter = closestPlayer.Character
        local targetRootPart = targetCharacter:FindFirstChild("HumanoidRootPart")

        if targetRootPart then
            local targetPosition = targetRootPart.Position
            rootPart.CFrame = CFrame.new(targetPosition + Vector3.new(0, 0, 5), targetPosition)
        end
    end
end

-- Angel's Rush Logic (Teleport to nearest player constantly for 1 second)
local function angelsRush()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character then
            local otherCharacter = otherPlayer.Character
            local otherRootPart = otherCharacter:FindFirstChild("HumanoidRootPart")

            if otherRootPart then
                local distance = (rootPart.Position - otherRootPart.Position).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    closestPlayer = otherPlayer
                end
            end
        end
    end

    if closestPlayer then
        local targetCharacter = closestPlayer.Character
        local targetRootPart = targetCharacter:FindFirstChild("HumanoidRootPart")

        if targetRootPart then
            local targetPosition = targetRootPart.Position
            local endTime = tick() + 1

            while tick() < endTime do
                rootPart.CFrame = CFrame.new(targetPosition + Vector3.new(0, 0, 5), targetPosition)
                task.wait(0.1)
            end
        end
    end
end

-- Listen for key presses to trigger abilities
userInputService.InputBegan:Connect(function(input, isTyping)
    if isTyping then return end
    if input.KeyCode == Enum.KeyCode.One then
        angelsPunch()
    elseif input.KeyCode == Enum.KeyCode.Two then
        angelsDownfall()
    elseif input.KeyCode == Enum.KeyCode.Three then
        angelsGrasp()
    elseif input.KeyCode == Enum.KeyCode.Four then
        angelsRush()
    end
end)
